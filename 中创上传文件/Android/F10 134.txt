runner_conf.sdkConfig.marketPerm.Level = "1"
runner_conf.sdkConfig.marketPerm.HKPerms.extend(["hk10", "hka1"])

runner_conf.sdkConfig.serverSites["sh"].CopyFrom(Site(ips=["http://114.80.155.134:22016"]))
runner_conf.sdkConfig.serverSites["sz"].CopyFrom(Site(ips=["http://114.80.155.134:22016"]))
runner_conf.sdkConfig.serverSites["cf"].CopyFrom(Site(ips=["http://114.80.155.134:22016"]))
runner_conf.sdkConfig.serverSites["nf"].CopyFrom(Site(ips=["http://114.80.155.134:22013"]))
runner_conf.sdkConfig.serverSites["pb"].CopyFrom(Site(ips=["http://114.80.155.134:22016"]))
# 财经资讯列表 方法一
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_NEWSLIST_1'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'newsType': '0000',
		'updateType': '-1',
		'newsID': 'null',
		'src': 'g'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 财经资讯明細  方法一
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_NEWS_1'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'newsID': '86168553164',
		'src': 'g'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 财经资讯图片  方法一 iOS无此接口
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_FININFOIMAGE_1'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'FininfoimageID': '86148253782',
		'src': 'g'
	}),
	json.dumps({
		'FininfoimageID': '86148253782',
		'src': 'd'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 财务报表  方法一
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_MAINFINADATANASS_1'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'stockId': '600000.sh',
		'dataSourceType': 'g'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 财务报表  方法二 仅用于港股
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_MAINFINADATANASS_2'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'stockId': '00001.hk',
		'dataSourceType': 'd',
		'cueryContent': 'null'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 财务指标  方法一
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_MAINFINAINDEXNAS_1'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'stockId': '600000.sh',
		'dataSourceType': 'g'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 财务指标  方法二 仅用于港股
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_MAINFINAINDEXNAS_2'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'stockId': '00001.hk',
		'dataSourceType': 'd',
		'cueryContent': 'null'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 大事提醒  方法一
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_IMPORTANTNOTICE_1'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'code': '600000.sh',
		'src': 'g'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 大宗交易 方法一
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_BLOCKTRADE_1'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'send': '600000.sh',
		'src': 'd'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 分红配送  方法一
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_BONUSFINANCE_1'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'code': '600000.sh',
		'src': 'g'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 份额结构 方法一
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_SHARESTRUCTURE_1'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'stockId': '518880.sh',
		'src': 'd'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 付息情况 方法一
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_BNDINTERESTPAY_1'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'stockId': '019535.sh',
		'src': 'd'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 个股公告内文  方法一
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_STOCKBULLETIN_1'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'bulletinID': '00175.hk_1414344',
		'src': 'd'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 个股新闻内文  方法一
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_STOCKNEWS_1'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'stockNewsID': '00651.hk_20190830020009252990',
		'src': 'd'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 个股研报内文  方法一
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_STOCKREPORT_1'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'code': '600000.sh_85830396633',
		'src': 'g'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 个股/自选公告  方法一
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_STOCKBULLETINLIST_1'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'stockId': '600000.sh',
		'updateType': '-1',
		'newsID': 'null',
		'src': 'd'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 个股/自选公告  方法二
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_STOCKBULLETINLIST_2'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'stockId': '600000.sh',
		'updateType': '-1',
		'newsID': 'null',
		'src': 'd',
		'count': '10'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 个股/自选新闻  方法一
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_STOCKNEWSLIST_1'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([	json.dumps({
		'stockId': '600000.sh',
		'updateType': '-1',
		'newsID': 'null',
		'src': 'd'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 个股/自选新闻  方法二
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_STOCKNEWSLIST_2'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'stockId': '600000.sh',
		'updateType': '-1',
		'newsID': 'null',
		'src': 'd',
		'count': '10'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 个股/自选研报 方法一
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_STOCKREPORTLIST_1'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'code': '603903.sh',
		'updateType': '-1',
		'newsID': 'null',
		'src': 'd'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 个股/自选研报 方法二
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_STOCKREPORTLIST_2'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'code': '600000.sh',
		'updateType': '-1',
		'newsID': 'null',
		'src': 'd',
		'count': '10'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 股本变动  方法一
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_STOCKSHARECHANGEINFO_1'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'code': '600000.sh',
		'src': 'g'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 股本结构  方法一
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_STOCKSHAREINFO_1'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'code': '600000.sh',
		'src': 'g'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 股东变动  方法一
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_SHAREHOLDERHISTORYINFO_1'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'code': '600000.sh',
		'src': 'g'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 股票组合 方法一
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_STOCKPORTFOLIO_1'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'stockId': '518880.sh',
		'src': 'd'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 管理层  方法一
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_LEADERPERSONINFO_1'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'code': '600000.sh',
		'src': 'g'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 行业组合 方法一
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_INDUSTRYPORTFOLIO_1'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'stockId': '518880.sh',
		'src': 'd'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 机构评等  方法一
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_FORECASTRATING_1'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'code': '600000.sh',
		'src': 'g'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 机构预测  方法一
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_FORECASTYEAR_1'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'code': '600000.sh',
		'src': 'g'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 基本情况  方法一
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_COMPANYINFO_1'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'code': '600000.sh',
		'src': 'g'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 基金财务 方法一
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_FNDFINANCE_1'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'stockId': '518880.sh',
		'src': 'd'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 基金分红 方法一
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_FNDDIVIDEEND_1'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'stockId': '518880.sh',
		'src': 'd'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 基金概况 方法一
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_FUNDBASIC_1'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'stockId': '512330.sh',
		'src': 'd'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 基金净值(12月) 方法一
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_FNDNAVINDEX_1'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'stockId': '502041.sh',
		'type': '12',
		'src': 'd'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 基金净值（五日） 方法一
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_FUNDVALUE_1'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'stockId': '502041.sh',
		'src': 'd'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 新股日历 方法一
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_CALENDAR_1'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'src': 'd'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 新债日历   方法一
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_BONDTRADINGDAY_1'
case_conf.continueWhenFailed = True
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'src': 'd'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 新股详情 方法一
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_NEWSHAREDETAIL_1'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'code': '002961.sz',
		'src': 'd'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 新债详情 方法一
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_BNDSHAREIPODETAI_1'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'code': '113543.sh',
		'src': 'd'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 债券概况 方法一
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_BONDBASIC_1'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'stockId': '019535.sh',
		'src': 'd'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 债券回购 方法一
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_BNDBUYBACKS_1'
case_conf.continueWhenFailed = True
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'stockId': '019535.sh',
		'src': 'd'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 主要业务  方法一
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_COREBUSINESS_1'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'code': '000001.sz',
		'src': 'g'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 资产配置 方法一
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_ASSETALLOCATION_1'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'stockId': '518880.sh',
		'src': 'd'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 最新基金持股  方法一
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_FUNDSHAREHOLDERINFO_1'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'code': '600000.sh',
		'src': 'g'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 最新十大股东  方法一
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_TOPSHAREHOLDER_1'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'code': '600000.sh',
		'src': 'g'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 最新十大流通股股东  方法一
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_TOPLIQUIDSHAREHOLDER_1'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'code': '600000.sh',
		'src': 'g'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 最新指标  方法一
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_NEWINDEX_1'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'code': '600000.sh',
		'src': 'g'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 当日新债 方法一
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_BNDNEWSHARESCAL_1'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'date': '2019-08-22',
		'src': 'g'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 融资融券  方法一
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_TRADEDETAIL_1'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'code': '600000.sh',
		'src': 'g'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 分级基金 方法一
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_STRUCTUREDFUND_1'
case_conf.continueWhenFailed = True
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'requestType': '/fndclassstockpre',
		'stockId': '502055.sh',
		'src': 'd'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 沪深---融资融券--分市场提供最近交易日 方法一
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_FINANCEMRGNIN_1'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'code': 'FINBALANCE_sh_0',
		'src': 'd',
		'param': '1,10',
		'part': 'null'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 沪深---融资融券--分市场提供最近交易日 方法二
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_FINANCEMRGNIN_2'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'code': 'sh',
		'src': 'd',
		'param': '1,10',
		'part': 'null'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 沪深---融资融券--分市场提供最近交易日 方法三
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10_FINANCEMRGNIN_3'
case_conf.continueWhenFailed = False
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'code': '600000.sh',
		'src': 'd',
		'param': '1,10',
		'part': 'null'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 財汇沪深盘后接口   方法一 用于对比
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10V2TEST_1'
case_conf.continueWhenFailed = True
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'code': '000001.sz',
		'src': 'd',
		'apiType': '/importantindex'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 財汇沪深盘后接口   方法二
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10V2TEST_2'
case_conf.continueWhenFailed = True
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'code': '600009.sh',
		'src': 'd',
		'param': '0,10',
		'apiType': '/importnoticedate'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 財汇沪深盘后接口   方法三
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10V2TEST_3'
case_conf.continueWhenFailed = True
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'code': '000001.sz',
		'src': 'd',
		'quarterType': 'EPSBASIC_0',
		'apiType': '/importantindex'
	})
])
runner_conf.casesConfig.extend([case_conf])

# 財汇沪深盘后接口   方法四
case_conf = TestcaseConfig()
case_conf.testcaseID = 'F10V2TEST_4'
case_conf.continueWhenFailed = True
case_conf.roundIntervalSec = 3
case_conf.paramStrs.extend([
	json.dumps({
		'code': '600000.sh',
		'src': 'd',
		'param': '0,100',
		'apiType': '/newsinteractive',
		'part': 'null',
		'type': 'QUESTIONTIME_1'
	}),
	json.dumps({
		'code': '600000.sh',
		'src': 'd',
		'param': '0,100',
		'apiType': '/importnoticetitle',
		'part': '/importnoticetitle',
		'type': 'new'
	})
])
runner_conf.casesConfig.extend([case_conf])